package main

import "fmt"

type(

)
func main() {
	// 变量还没有要用，但是在后面分支结构中可能用到，就不能在这个结构中进行变量声明
	// 因为可能在结构退出之后还要进行其他运算，此时需要提前将变量生命
	//var b int  // var声明变量类型
	//b = 1  // 给变量赋值

	// var b int = 1  //可以这样写；一般用在全局变量中，全局变量必须进行显示声明
					 // 写出变量类型就明确告诉编译器我声明的变量类型，比如int
					 // 但是后续运算中与浮点数进行运算的话就会报错

	// var b = 1   //go 有类型推断，可以这样写


	b := 1  //用:替代了var，可以这样写，最简方式；不可以用来声明全局变量

	// XX var(B=1,A=2) //不可以使用var()变量组的形式在 方法体内 进行多个变量的声明
	// 全局变量多个变量声明可以是哟功能var()变量组也可以使用并行方式，但是不能省略关键字var
	// 方法体内声明多个变量只能用并行方式（可以省略var关键字）；
	//var a,d,c int = 1,2,3
	//var a,d,c = 1,2,3
	a,d,c := 1,2,3
	fmt.Println(b,a,d,c)

	// _空白符号，可以对赋值进行忽略；常应用在一个函数有多个返回值的时候
}